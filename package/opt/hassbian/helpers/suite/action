#!bin/bash
#  Helper script for hassbian-config.

declare author
declare suitename
declare suiteaction
declare name
declare long_description

function hassbian.suite.action {
  # Purpose: Check if a suite exist.
  # Return 0 if found, else 1.

  suiteaction="$1"
  suitename="$2"

  # Root check.
  hassbian.info.general.rootcheck

  # Verify that the suite exist.
  hassbian.suite.helper.exist "$suitename"

  # Generate systeminfo
  hassbian.info.general.systeminfo

  # Echo metadata
  author=$(hassbian.suite.helper.manifest "$suitename" author)
  name=$(hassbian.suite.helper.manifest "$suitename" name)
  long_description=$(hassbian.suitehelper..manifest "$suitename" long_description)

  echo "
  $name
  Contributed to the project by $author
    $long_description"

  # Do checks to see if the suite can be run.
  hassbian.suite.helper.blockcheck "$suitename"
  hassbian.suite.helper.pizerocheck "$suitename"

  if [ "$suiteaction" == "install" ]; then
    hassbian.suite.install "$suitename" | tee "$HASSBIAN_LOG_FILE"

  elif [ "$suiteaction" == "upgrade" ]; then
    hassbian.suite.upgrade "$suitename" | tee "$HASSBIAN_LOG_FILE"

  elif [ "$suiteaction" == "remove" ]; then
    hassbian.suite.remove "$suitename" | tee "$HASSBIAN_LOG_FILE"

  elif [ "$suiteaction" == "show" ]; then
    hassbian.suite.info.print "$suitename"

  else
    echo "$suiteaction is not a valid suite action."
    exit 1
  fi
}

[[ "$_" == "$0" ]] && echo "$ECHO_HELPER_WARNING"