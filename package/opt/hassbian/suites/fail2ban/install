#!/bin/bash
# 
# Installation script for Hassbian suite: DuckDNS
#

function install {
  local FAIL2BANFILTER
  local FAIL2BANJAIL

  hassbian.suite.helper.install.apt fail2ban

  FAIL2BANFILTER="/etc/fail2ban/filter.d/ha.conf"
  FAIL2BANJAIL="/etc/fail2ban/jail.d/ha.conf"

  echo "Creating configuration files..."
  if [ -f $FAIL2BANFILTER ] ; then
      echo "Configuration file exists. Skipping..."
  else

  echo "[INCLUDES]
before = common.conf

[Definition]
failregex = ^%(__prefix_line)s.*Login attempt or request with invalid authentication from <HOST>.*$
ignoreregex =" > "$FAIL2BANFILTER"

  fi

  if [ -f $FAIL2BANJAIL ] ; then
      echo "Configuration file exists. Skipping.."
  else

  echo "[DEFAULT]
# Email config
sender = email@address.com
destemail = email@address.com

# Action %(action_mwl)s will ban the IP and send an email notification including whois data and log entries.
action = %(action_mwl)s

[ha]
enabled = true
filter = ha
logpath = /home/homeassistant/.homeassistant/home-assistant.log

# 3600 seconds = 1 hour
bantime = 3600
#bantime = 30 # during testing it is useful to have a short ban interval, comment out this line later

# Maximum amount of login attempts before IP is blocked
maxretry = 3" > "$FAIL2BANJAIL"
  fi

  echo "Restarting fail2ban service"
  systemctl restart fail2ban

  echo "Checking the installation..."
  validation=$(which fail2ban-client)
  if [ ! -z "${validation}" ]; then
    echo
    echo -e "\\e[32mInstallation done.\\e[0m"
    echo
    echo "To continue have a look at https://www.home-assistant.io/cookbook/fail2ban/"
    echo
  else
    echo
    echo -e "\\e[31mInstallation failed..."
    echo
    return 1
  fi
  return 0
}

[[ "$_" == "$0" ]] && echo "$ECHO_HELPER_WARNING"